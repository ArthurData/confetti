% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sendconfetti.R
\name{sendConfetti}
\alias{sendConfetti}
\title{sendConfetti}
\usage{
sendConfetti(
  particle_count = 50,
  angle = 90,
  spread = 45,
  start_velocity = 45,
  decay = 0.9,
  gravity = 1,
  drift = 0,
  ticks = 200,
  origin = list(x = 0.5, y = 0.5),
  colors = NA,
  shapes = NA,
  scalar = 1,
  z_index = 100,
  disable_for_reduced_motion = FALSE,
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{particle_count}{Number. How many confetti launch. Default is 50.}

\item{angle}{In degrees. The angle in which to launch the confetti. Default is 90.}

\item{spread}{In degrees. How far off center the confetti can go. Default is 45.}

\item{start_velocity}{Number. How fast the confetti start. Default is 45}

\item{decay}{Number between 0 and 1. How quickly the confetti will lose speed. Default is 0.9.}

\item{gravity}{Number. How quickly the particles are pulled down. Default is 1.}

\item{drift}{Number. How much to the side the confetti will drift. Default is 0.}

\item{ticks}{Number. How many times the confetti will move. Default is 200.}

\item{origin}{List. Where to start firing confetti from. Default is 0.5.}

\item{colors}{List. A list of color strings, in the HEX format.}

\item{shapes}{List. A list of shapes for the confetti. Square or circle.}

\item{scalar}{Number. Scale factor for each confetti particle. Default is 1.}

\item{z_index}{Number. Customize confetti canvas on your page. Default is 100.}

\item{disable_for_reduced_motion}{Logical. Disables confetti entirely for users that prefer reduced motion. Default is FALSE.}

\item{session}{a shiny session}
}
\value{
a javascript event in a shiny app to launch confetti.
}
\description{
Send confetti in your shiny app
}
\examples{
if (interactive()) {
  library(shiny)
  
  shinyApp(
    ui = fluidRow(
      useConfetti(),
      actionButton(
        inputId = "go",
        label =  "Send confetti"
      )

    ),
    
    server = function(input, output, session) {
      observeEvent(input$go, {
        sendConfetti()
        message("You have sent ", input$sentConfetti, " confetti")
      })
    }
  )
}
}
